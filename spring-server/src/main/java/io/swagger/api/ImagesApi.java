/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ERRORUNKNOWN;
import io.swagger.model.Error;
import org.springframework.core.io.Resource;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-02-14T13:12:07.606Z")

@Api(value = "images", description = "the images API")
public interface ImagesApi {

    @ApiOperation(value = "Gets an image", nickname = "imagesImageIdGet", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The image"),
        @ApiResponse(code = 404, message = "Image do not exists"),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Error.class),
        @ApiResponse(code = 200, message = "A totally unexpected response") })
    @RequestMapping(value = "/images/{imageId}",
        produces = { "image/png", "image/gif", "image/jpeg", "application/json", "application/x-yaml" }, 
        consumes = { "application/json", "application/x-yaml" },
        method = RequestMethod.GET)
    ResponseEntity<Void> imagesImageIdGet(@ApiParam(value = "" ,required=true) @RequestHeader(value="User-Agent", required=true) String userAgent,@ApiParam(value = "",required=true) @PathVariable("imageId") String imageId);


    @ApiOperation(value = "Uploads an image", nickname = "imagesPost", notes = "", response = ERRORUNKNOWN.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Image's ID", response = ERRORUNKNOWN.class),
        @ApiResponse(code = 500, message = "An unexpected error occured.", response = Error.class),
        @ApiResponse(code = 200, message = "A totally unexpected response") })
    @RequestMapping(value = "/images",
        produces = { "application/json", "application/x-yaml" }, 
        consumes = { "multipart/form-data" },
        method = RequestMethod.POST)
    ResponseEntity<ERRORUNKNOWN> imagesPost(@ApiParam(value = "" ,required=true) @RequestHeader(value="User-Agent", required=true) String userAgent,@ApiParam(value = "file detail") @Valid @RequestPart("file") MultipartFile image);

}
